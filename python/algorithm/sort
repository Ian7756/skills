1. 선택 정렬(Selection Sort)
	- 가장 작은 것을 선택해서 제일 앞으로 보내는 알고리즘
	- 시간복잡도 O(N^2)
	
2. 버블 정렬(Bubble Sort)
	- 옆에 있는 값과 비교해서 더 작은 값을 앞으로 보내는 정렬
	- 가장 비효율적
	- 시간복잡도 O(N^2)

3. 삽입 정렬(Insertion Sort)
	- 각 숫자를 적절한 위치에 삽입하는 방법
	- 기본적인 정렬이 되어있는 리스트에서 굉장히 빠른 속도
	- 시간복잡도 O(N^2)
	
4. 퀵 정렬(Quick Sort)
	- 대표적인 '분할 정복' 알고리즘
	- 특정한 값을 기준으로 큰 숫자와 작은 숫잘르 서로 교환한 뒤 배열을 반으로 나눔
	- 기준 값을 피벗(Pivot)이라고 함(보통 첫 번째 원소를 피벗 값으로 설정)
	- 평균 시간복잡도 O(N*log N), 최악 시간복잡도 O(N^2)

5. 병합 정렬(Merge Sort)
	- 분할정복 알고리즘
	- 정확히 반으로 나누고 나중에 정렬
	- 기존 데이터를 담을 추가적인 배열 공간이 필요함
	- 시간복잡도 O(N*log N), 최악의 경우에도 동일
	- 평균적으로 퀵 정렬보단 느리지만, 안정적인 시간복잡도를 가지는 장점

6. 힙 정렬(Heap Sort)
	- 힙 트리 구조를 이용하는 정렬 방법
	- 이진트리(Binary Tree) : 모든 자식 노드가 2개 이하인 노드
	- 힙 정렬을 위해선, 정해진 데이터를 힙 구조로 만들어야함
	- 시간복잡도 O(N*log N)
	
	